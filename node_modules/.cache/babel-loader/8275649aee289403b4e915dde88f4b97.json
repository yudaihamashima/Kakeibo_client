{"ast":null,"code":"var _jsxFileName = \"/Users/yudaihamashima/programing/Projects/3_money-management/src/components/atoms/crudUnit/valueEditTextField.tsx\",\n    _s = $RefreshSig$();\n\n//textEditField.tsx\nimport { TextField } from '@mui/material'; //変更するコンポーネント配列をインポート（元もあるrow＋新しいrow）\n\nimport { useRecoilState } from 'recoil';\nimport { newPaymentState } from '../../../recoil/atoms';\nimport { editPaymentState } from '../../../recoil/atoms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ValueEditTextField(props) {\n  _s();\n\n  const payment = props.payment;\n  const editElement = props.editElement;\n  const keys = Object.keys(payment);\n  const editElementKey = keys.find(key => key === editElement);\n  const [newPayment, setNewPayment] = useRecoilState(newPaymentState);\n  const [editPayment, setEditPayment] = useRecoilState(editPaymentState); //テキストフィールドで編集する要素分の条件分岐を用意\n\n  const handleChange = event => {\n    if (editElementKey === 'cost') {\n      if (payment.id !== null) {\n        setEditPayment({ ...editPayment,\n          cost: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      } else {\n        setNewPayment({ ...newPayment,\n          cost: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      }\n    }\n\n    if (editElementKey === 'name') {\n      if (payment.id !== null) {\n        setEditPayment({ ...editPayment,\n          name: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      } else {\n        setNewPayment({ ...newPayment,\n          name: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      }\n    }\n\n    if (editElementKey === 'category') {\n      if (payment.id !== null) {\n        setEditPayment({ ...editPayment,\n          category: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      } else {\n        setNewPayment({ ...newPayment,\n          category: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      }\n    }\n\n    if (editElementKey === 'date') {\n      if (payment.id !== null) {\n        setEditPayment({ ...editPayment,\n          date: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      } else {\n        setNewPayment({ ...newPayment,\n          date: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      }\n    }\n  };\n\n  if (payment.id !== null) {\n    if (editElementKey === 'cost') {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        value: editPayment.cost,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this);\n    } else if (editElementKey === 'name') {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        value: editPayment.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this);\n    } else if (editElementKey === 'category') {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        value: editPayment.category,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this);\n    } else if (editElementKey === 'date') {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"date\",\n        value: editPayment.date,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  } else {\n    if (editElementKey === 'cost') {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        value: newPayment.cost,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 20\n      }, this);\n    } else if (editElementKey === 'name') {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        value: newPayment.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }, this);\n    } else if (editElementKey === 'category') {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        value: newPayment.category,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this);\n    } else if (editElementKey === 'date') {\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"date\",\n        value: newPayment.date,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  }\n}\n\n_s(ValueEditTextField, \"W0Saew/ZrEDI99+YpUQHGVLaMWs=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = ValueEditTextField;\nexport default ValueEditTextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValueEditTextField\");","map":{"version":3,"names":["TextField","useRecoilState","newPaymentState","editPaymentState","ValueEditTextField","props","payment","editElement","keys","Object","editElementKey","find","key","newPayment","setNewPayment","editPayment","setEditPayment","handleChange","event","id","cost","target","value","name","category","date"],"sources":["/Users/yudaihamashima/programing/Projects/3_money-management/src/components/atoms/crudUnit/valueEditTextField.tsx"],"sourcesContent":["//textEditField.tsx\n\nimport { TextField } from '@mui/material'\n\n//変更するコンポーネント配列をインポート（元もあるrow＋新しいrow）\nimport { useRecoilState } from 'recoil'\nimport { newPaymentState } from '../../../recoil/atoms'\nimport { editPaymentState } from '../../../recoil/atoms'\n\nfunction ValueEditTextField(props: any) {\n    const payment = props.payment\n    const editElement = props.editElement\n    \n    const keys = Object.keys(payment)\n    const editElementKey = keys.find((key) => key === editElement)\n\n    const [ newPayment, setNewPayment] = useRecoilState(newPaymentState)\n    const [ editPayment, setEditPayment ] = useRecoilState(editPaymentState)\n\n\n    //テキストフィールドで編集する要素分の条件分岐を用意\n    const handleChange = (event: any) => {\n        if(editElementKey === 'cost'){\n            if(payment.id !== null){\n                setEditPayment({ ...editPayment, cost: event?.target.value })\n            } else {\n                setNewPayment({ ...newPayment, cost: event?.target.value })\n            }\n        }\n        if(editElementKey === 'name'){\n            if(payment.id !== null){\n                setEditPayment({ ...editPayment, name: event?.target.value })\n            } else {\n                setNewPayment({ ...newPayment, name: event?.target.value })\n            }\n        }\n        if(editElementKey === 'category'){\n            if(payment.id !== null){\n                setEditPayment({ ...editPayment, category: event?.target.value })\n            } else {\n                setNewPayment({ ...newPayment, category: event?.target.value })\n            }\n        }\n        if(editElementKey === 'date'){\n            if(payment.id !== null){\n                setEditPayment({ ...editPayment, date: event?.target.value })\n            } else {\n                setNewPayment({ ...newPayment, date: event?.target.value })\n            }\n        }\n    }\n\n    if(payment.id !== null) {\n        if(editElementKey === 'cost') {\n            return <TextField value={editPayment.cost} onChange={handleChange} />\n        } else if(editElementKey === 'name') {\n            return <TextField value={editPayment.name} onChange={handleChange} />\n        } else if(editElementKey === 'category') {\n            return <TextField value={editPayment.category} onChange={handleChange} />\n        } else if (editElementKey === 'date'){\n            return <TextField type=\"date\" value={editPayment.date} onChange={handleChange} />\n        } else {\n            return <></>\n        }\n    } else {\n        if(editElementKey === 'cost') {\n            return <TextField value={newPayment.cost} onChange={handleChange} />\n        } else if(editElementKey === 'name') {\n            return <TextField value={newPayment.name} onChange={handleChange} />\n        } else if(editElementKey === 'category') {\n            return <TextField value={newPayment.category} onChange={handleChange} />\n        } else if (editElementKey === 'date'){\n            return <TextField type=\"date\" value={newPayment.date} onChange={handleChange} />\n        } else {\n            return <></>\n        }\n    }\n    \n}\n\nexport default ValueEditTextField"],"mappings":"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"},"metadata":{},"sourceType":"module"}