{"ast":null,"code":"var _jsxFileName = \"/Users/yudaihamashima/programing/Projects/3_money-management/src/components/atoms/crudUnit/valueEditTextField.tsx\",\n    _s = $RefreshSig$();\n\n//textEditField.tsx\nimport { TextField } from '@mui/material'; //変更するコンポーネント配列をインポート（元もあるrow＋新しいrow）\n\nimport { useRecoilState } from 'recoil';\nimport { defaultPayment } from '../../../recoil/atoms';\nimport { editPayment } from '../../../recoil/atoms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ValueEditTextField(props) {\n  _s();\n\n  const payment = props.payment;\n  const editElement = props.editElement;\n  const keys = Object.keys(payment);\n  const editElementKey = keys.find(key => key === editElement);\n  const [newPayment, setNewPayment] = useRecoilState(defaultPayment);\n  const [paymentForEdit, setPaymentForEdit] = useRecoilState(editPayment); //テキストフィールドで編集する要素分の条件分岐を用意\n\n  const handleChange = event => {\n    if (editElementKey === 'cost') {\n      if (payment.id !== null) {\n        setPaymentForEdit({ ...paymentForEdit,\n          cost: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      } else {\n        setNewPayment({ ...newPayment,\n          cost: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      }\n    }\n\n    if (editElementKey === 'name') {\n      if (payment.id !== null) {\n        setPaymentForEdit({ ...paymentForEdit,\n          name: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      } else {\n        setNewPayment({ ...newPayment,\n          name: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      }\n    }\n\n    if (editElementKey === 'category') {\n      if (payment.id !== null) {\n        setPaymentForEdit({ ...paymentForEdit,\n          category: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      } else {\n        setNewPayment({ ...newPayment,\n          category: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      }\n    }\n\n    if (editElementKey === 'date') {\n      if (payment.id !== null) {\n        setPaymentForEdit({ ...paymentForEdit,\n          date: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      } else {\n        setNewPayment({ ...newPayment,\n          date: event === null || event === void 0 ? void 0 : event.target.value\n        });\n      }\n    }\n  };\n\n  if (editElementKey === 'cost') {\n    return /*#__PURE__*/_jsxDEV(TextField, {\n      value: paymentForEdit.cost,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  } else if (editElementKey === 'name') {\n    return /*#__PURE__*/_jsxDEV(TextField, {\n      value: paymentForEdit.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  } else if (editElementKey === 'category') {\n    return /*#__PURE__*/_jsxDEV(TextField, {\n      value: paymentForEdit.category,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  } else if (editElementKey === 'date') {\n    return /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"date\",\n      value: paymentForEdit.date,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n}\n\n_s(ValueEditTextField, \"hWFVF955xhwla83tiqYk6QlTajY=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = ValueEditTextField;\nexport default ValueEditTextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValueEditTextField\");","map":{"version":3,"names":["TextField","useRecoilState","defaultPayment","editPayment","ValueEditTextField","props","payment","editElement","keys","Object","editElementKey","find","key","newPayment","setNewPayment","paymentForEdit","setPaymentForEdit","handleChange","event","id","cost","target","value","name","category","date"],"sources":["/Users/yudaihamashima/programing/Projects/3_money-management/src/components/atoms/crudUnit/valueEditTextField.tsx"],"sourcesContent":["//textEditField.tsx\n\nimport { TextField } from '@mui/material'\n\n//変更するコンポーネント配列をインポート（元もあるrow＋新しいrow）\nimport { useRecoilState } from 'recoil'\nimport { defaultPayment } from '../../../recoil/atoms'\nimport { editPayment } from '../../../recoil/atoms'\n\nfunction ValueEditTextField(props: any) {\n    const payment = props.payment\n    const editElement = props.editElement\n    \n    const keys = Object.keys(payment)\n    const editElementKey = keys.find((key) => key === editElement)\n\n    const [ newPayment, setNewPayment] = useRecoilState(defaultPayment)\n    const [ paymentForEdit, setPaymentForEdit ] = useRecoilState(editPayment)\n\n\n    //テキストフィールドで編集する要素分の条件分岐を用意\n    const handleChange = (event: any) => {\n        if(editElementKey === 'cost'){\n            if(payment.id !== null){\n                setPaymentForEdit({ ...paymentForEdit, cost: event?.target.value })\n            } else {\n                setNewPayment({ ...newPayment, cost: event?.target.value })\n            }\n        }\n        if(editElementKey === 'name'){\n            if(payment.id !== null){\n                setPaymentForEdit({ ...paymentForEdit, name: event?.target.value })\n            } else {\n                setNewPayment({ ...newPayment, name: event?.target.value })\n            }\n        }\n        if(editElementKey === 'category'){\n            if(payment.id !== null){\n                setPaymentForEdit({ ...paymentForEdit, category: event?.target.value })\n            } else {\n                setNewPayment({ ...newPayment, category: event?.target.value })\n            }\n        }\n        if(editElementKey === 'date'){\n            if(payment.id !== null){\n                setPaymentForEdit({ ...paymentForEdit, date: event?.target.value })\n            } else {\n                setNewPayment({ ...newPayment, date: event?.target.value })\n            }\n        }\n    }\n\n    if(editElementKey === 'cost') {\n        return <TextField value={paymentForEdit.cost} onChange={handleChange} />\n    } else if(editElementKey === 'name') {\n        return <TextField value={paymentForEdit.name} onChange={handleChange} />\n    } else if(editElementKey === 'category') {\n        return <TextField value={paymentForEdit.category} onChange={handleChange} />\n    } else if (editElementKey === 'date'){\n        return <TextField type=\"date\" value={paymentForEdit.date} onChange={handleChange} />\n    } else {\n        return <></>\n    }\n\n}\n\nexport default ValueEditTextField"],"mappings":"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"},"metadata":{},"sourceType":"module"}