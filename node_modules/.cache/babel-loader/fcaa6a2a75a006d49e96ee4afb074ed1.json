{"ast":null,"code":"var _jsxFileName = \"/Users/yudaihamashima/programing/Projects/3_money-management/src/components/organisms/paymentCalender.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRecoilValue } from 'recoil';\nimport { paymentState } from '../../recoil/atoms';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentCalender(props) {\n  _s();\n\n  const date = props.date;\n  /*\n  const dateNumber = new Date(date)\n  const year = dateNumber.getFullYear()\n  const month = dateNumber.getMonth()+1\n  const day = dateNumber.getDate()\n  */\n\n  const payments = useRecoilValue(paymentState); //input calender event\n\n  const PaymentBars = date => {\n    const paymentBars = [];\n    const paymentsOfDay = payments.filter(payment => payment.date === date);\n    paymentsOfDay.map(paymentOfDay => {\n      paymentBars.push({\n        title: paymentOfDay.cost.toString() + '円',\n        start: paymentOfDay.date\n      });\n    });\n    return paymentBars;\n  };\n\n  return /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin],\n    initialView: \"dayGridMonth\",\n    events: PaymentBars(date)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentCalender, \"Y8ZHXiROVM6gbKTcyixFa/SA2vo=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = PaymentCalender;\nexport default PaymentCalender;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentCalender\");","map":{"version":3,"names":["useRecoilValue","paymentState","FullCalendar","dayGridPlugin","timeGridPlugin","PaymentCalender","props","date","payments","PaymentBars","paymentBars","paymentsOfDay","filter","payment","map","paymentOfDay","push","title","cost","toString","start"],"sources":["/Users/yudaihamashima/programing/Projects/3_money-management/src/components/organisms/paymentCalender.tsx"],"sourcesContent":["import { useRecoilValue } from 'recoil'\nimport { paymentState } from '../../recoil/atoms'\n\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\n\nfunction PaymentCalender(props: any) {\n    const date = props.date\n    /*\n    const dateNumber = new Date(date)\n    const year = dateNumber.getFullYear()\n    const month = dateNumber.getMonth()+1\n    const day = dateNumber.getDate()\n    */\n    const payments = useRecoilValue(paymentState)\n\n    //input calender event\n    const PaymentBars = (date: string) => {\n        interface PaymentBar {\n            title: string\n            start: string\n        }\n        const paymentBars = [] as PaymentBar[] \n        const paymentsOfDay = payments.filter((payment) => payment.date === date)\n      \n        paymentsOfDay.map((paymentOfDay) => {\n            paymentBars.push({\n                title: paymentOfDay.cost.toString()+'円',\n                start: paymentOfDay.date\n            })\n        })\n        return paymentBars\n    }\n\n    return(\n        <FullCalendar\n            plugins={[dayGridPlugin, timeGridPlugin]}\n            initialView=\"dayGridMonth\"\n            events={PaymentBars(date)}\n        />       \n    )\n\n}\n\nexport default PaymentCalender"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,QAA/B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAqC;EAAA;;EACjC,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;EACA;AACJ;AACA;AACA;AACA;AACA;;EACI,MAAMC,QAAQ,GAAGR,cAAc,CAACC,YAAD,CAA/B,CARiC,CAUjC;;EACA,MAAMQ,WAAW,GAAIF,IAAD,IAAkB;IAKlC,MAAMG,WAAW,GAAG,EAApB;IACA,MAAMC,aAAa,GAAGH,QAAQ,CAACI,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACN,IAAR,KAAiBA,IAA9C,CAAtB;IAEAI,aAAa,CAACG,GAAd,CAAmBC,YAAD,IAAkB;MAChCL,WAAW,CAACM,IAAZ,CAAiB;QACbC,KAAK,EAAEF,YAAY,CAACG,IAAb,CAAkBC,QAAlB,KAA6B,GADvB;QAEbC,KAAK,EAAEL,YAAY,CAACR;MAFP,CAAjB;IAIH,CALD;IAMA,OAAOG,WAAP;EACH,CAfD;;EAiBA,oBACI,QAAC,YAAD;IACI,OAAO,EAAE,CAACP,aAAD,EAAgBC,cAAhB,CADb;IAEI,WAAW,EAAC,cAFhB;IAGI,MAAM,EAAEK,WAAW,CAACF,IAAD;EAHvB;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;GApCQF,e;UAQYL,c;;;KARZK,e;AAsCT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}