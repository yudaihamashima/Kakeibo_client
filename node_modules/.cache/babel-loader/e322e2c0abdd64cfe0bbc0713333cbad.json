{"ast":null,"code":"var _jsxFileName = \"/Users/yudaihamashima/programing/Projects/3_money-management/src/components/atoms/crudUnit/valueEditTextFieldCategory.tsx\",\n    _s = $RefreshSig$();\n\nimport { TextField } from '@mui/material';\n//変更するコンポーネント配列をインポート\nimport { useRecoilState } from 'recoil';\nimport { paymentState } from '../../../recoil/atoms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValueEditTextFieldCategory(props) {\n  _s();\n\n  const payment = props.payment;\n  const [payments, setPayments] = useRecoilState(paymentState);\n  const keys = Object.keys(payments);\n  console.log(keys);\n\n  const handleChange = event => {\n    setPayments([...payments.slice(0, payment.id), { ...payment,\n      category: event === null || event === void 0 ? void 0 : event.target.value\n    }, ...payments.slice(payment.id + 1)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    value: payment.category,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ValueEditTextFieldCategory, \"yTV53krUYOSmAX299OAvAe40g1A=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = ValueEditTextFieldCategory;\nexport default ValueEditTextFieldCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValueEditTextFieldCategory\");","map":{"version":3,"names":["TextField","useRecoilState","paymentState","ValueEditTextFieldCategory","props","payment","payments","setPayments","keys","Object","console","log","handleChange","event","slice","id","category","target","value"],"sources":["/Users/yudaihamashima/programing/Projects/3_money-management/src/components/atoms/crudUnit/valueEditTextFieldCategory.tsx"],"sourcesContent":["import { TableCell, TextField } from '@mui/material'\nimport { useState } from 'react'\n\n//変更するコンポーネント配列をインポート\nimport { useRecoilState } from 'recoil'\nimport { paymentState } from '../../../recoil/atoms'\n\nfunction ValueEditTextFieldCategory(props: any) {\n    const payment = props.payment\n    const [payments, setPayments] = useRecoilState(paymentState)\n    const keys = Object.keys(payments)\n    console.log(keys)\n\n    const handleChange = (event: any) => {\n        setPayments([\n            ...payments.slice(0, payment.id),\n            {...payment, category: event?.target.value},\n            ...payments.slice(payment.id+1)\n        ])\n    }\n\n    return <TextField value={payment.category} onChange={handleChange} />\n}\n\nexport default ValueEditTextFieldCategory"],"mappings":";;;AAAA,SAAoBA,SAApB,QAAqC,eAArC;AAGA;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,YAAT,QAA6B,uBAA7B;;;AAEA,SAASC,0BAAT,CAAoCC,KAApC,EAAgD;EAAA;;EAC5C,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,cAAc,CAACC,YAAD,CAA9C;EACA,MAAMM,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,QAAZ,CAAb;EACAI,OAAO,CAACC,GAAR,CAAYH,IAAZ;;EAEA,MAAMI,YAAY,GAAIC,KAAD,IAAgB;IACjCN,WAAW,CAAC,CACR,GAAGD,QAAQ,CAACQ,KAAT,CAAe,CAAf,EAAkBT,OAAO,CAACU,EAA1B,CADK,EAER,EAAC,GAAGV,OAAJ;MAAaW,QAAQ,EAAEH,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEI,MAAP,CAAcC;IAArC,CAFQ,EAGR,GAAGZ,QAAQ,CAACQ,KAAT,CAAeT,OAAO,CAACU,EAAR,GAAW,CAA1B,CAHK,CAAD,CAAX;EAKH,CAND;;EAQA,oBAAO,QAAC,SAAD;IAAW,KAAK,EAAEV,OAAO,CAACW,QAA1B;IAAoC,QAAQ,EAAEJ;EAA9C;IAAA;IAAA;IAAA;EAAA,QAAP;AACH;;GAfQT,0B;UAE2BF,c;;;KAF3BE,0B;AAiBT,eAAeA,0BAAf"},"metadata":{},"sourceType":"module"}