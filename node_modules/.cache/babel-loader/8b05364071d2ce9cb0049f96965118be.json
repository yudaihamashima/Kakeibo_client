{"ast":null,"code":"var _jsxFileName = \"/Users/yudaihamashima/programing/Projects/3_money-management/src/components/atoms/crudUnit/valueEditTextField.tsx\",\n    _s = $RefreshSig$();\n\nimport { TextField } from '@mui/material';\n//変更するコンポーネント配列をインポート\nimport { useRecoilState } from 'recoil';\nimport { paymentState } from '../../../recoil/atoms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValueEditTextField(props) {\n  _s();\n\n  const payment = props.payment;\n  const editElement = props.editElement;\n  const keys = Object.keys(payment);\n  const editElementKey = keys.find(key => key === editElement);\n  const [payments, setPayments] = useRecoilState(paymentState); //テキストフィールドで編集する要素分の条件分岐を用意\n\n  const handleChange = event => {\n    if (editElementKey === 'cost') {\n      setPayments([...payments.slice(0, payment.id), { ...payment,\n        cost: event === null || event === void 0 ? void 0 : event.target.value\n      }, ...payments.slice(payment.id + 1)]);\n    }\n\n    if (editElementKey === 'name') {\n      setPayments([...payments.slice(0, payment.id), { ...payment,\n        name: event === null || event === void 0 ? void 0 : event.target.value\n      }, ...payments.slice(payment.id + 1)]);\n    }\n\n    if (editElementKey === 'category') {\n      setPayments([...payments.slice(0, payment.id), { ...payment,\n        cost: event === null || event === void 0 ? void 0 : event.target.value\n      }, ...payments.slice(payment.id + 1)]);\n    }\n\n    if (editElementKey === 'date') {\n      setPayments([...payments.slice(0, payment.id), { ...payment,\n        cost: event === null || event === void 0 ? void 0 : event.target.value\n      }, ...payments.slice(payment.id + 1)]);\n    }\n  };\n\n  const textFieldValue = '';\n\n  if (editElementKey === 'cost') {\n    let textFieldValue = payment.cost;\n  }\n\n  if (editElementKey === 'name') {\n    const textFieldValue = payment.name;\n  }\n\n  if (editElementKey === 'category') {\n    const textFieldValue = payment.category;\n  }\n\n  if (editElementKey === 'date') {\n    const textFieldValue = payment.date;\n  }\n\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    value: textFieldValue,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ValueEditTextField, \"yTV53krUYOSmAX299OAvAe40g1A=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = ValueEditTextField;\nexport default ValueEditTextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValueEditTextField\");","map":{"version":3,"names":["TextField","useRecoilState","paymentState","ValueEditTextField","props","payment","editElement","keys","Object","editElementKey","find","key","payments","setPayments","handleChange","event","slice","id","cost","target","value","name","textFieldValue","category","date"],"sources":["/Users/yudaihamashima/programing/Projects/3_money-management/src/components/atoms/crudUnit/valueEditTextField.tsx"],"sourcesContent":["import { TableCell, TextField } from '@mui/material'\nimport { useState } from 'react'\n\n//変更するコンポーネント配列をインポート\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { paymentState } from '../../../recoil/atoms'\n\nfunction ValueEditTextField(props: any) {\n    const payment = props.payment\n    const editElement = props.editElement\n    \n    const keys = Object.keys(payment)\n    const editElementKey = keys.find((key) => key === editElement)\n\n    const [payments, setPayments] = useRecoilState(paymentState)\n\n    //テキストフィールドで編集する要素分の条件分岐を用意\n    const handleChange = (event: any) => {\n        if(editElementKey === 'cost'){\n            setPayments([\n                ...payments.slice(0, payment.id),\n                {...payment, cost: event?.target.value},\n                ...payments.slice(payment.id+1)\n            ])\n        }\n        if(editElementKey === 'name'){\n            setPayments([\n                ...payments.slice(0, payment.id),\n                {...payment, name: event?.target.value},\n                ...payments.slice(payment.id+1)\n            ])\n        }\n        if(editElementKey === 'category'){\n            setPayments([\n                ...payments.slice(0, payment.id),\n                {...payment, cost: event?.target.value},\n                ...payments.slice(payment.id+1)\n            ])\n        }\n        if(editElementKey === 'date'){\n            setPayments([\n                ...payments.slice(0, payment.id),\n                {...payment, cost: event?.target.value},\n                ...payments.slice(payment.id+1)\n            ])\n        }\n    }\n\n    const textFieldValue = ''\n\n    if(editElementKey === 'cost'){\n        let textFieldValue = payment.cost\n    }\n    if(editElementKey === 'name'){\n        const textFieldValue = payment.name\n    }\n    if(editElementKey === 'category'){\n        const textFieldValue = payment.category\n    }\n    if(editElementKey === 'date'){\n        const textFieldValue = payment.date\n    }\n\n    return (\n        <TextField \n            value={textFieldValue}\n            onChange={handleChange} \n        />\n    )\n}\n\nexport default ValueEditTextField"],"mappings":"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"},"metadata":{},"sourceType":"module"}