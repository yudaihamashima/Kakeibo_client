{"ast":null,"code":"var _jsxFileName = \"/Users/yudaihamashima/programing/Projects/3_money-management/src/components/atoms/crudUnit/choosePayedByButton.tsx\",\n    _s = $RefreshSig$();\n\n//propsとして、コンポーネント配列の１要素（コンポーネント）を受け取る\nimport { Button, ButtonGroup } from \"@mui/material\"; //２択ボタンのアイコンをインストール\n\nimport CreditCardIcon from '@mui/icons-material/CreditCard';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn'; //変更するコンポーネント配列をインポート\n\nimport { useRecoilState } from 'recoil';\nimport { paymentState } from '../../../recoil/atoms';\nimport { defaultPayment } from '../../../recoil/atoms'; //ボタンの選択・未選択時のデザイン\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst choosedStyle = {\n  color: \"#474747\",\n  background: \"#fffa0f\"\n};\nconst notChoosedStyle = {\n  color: \"#d6d6d6\",\n  background: \"#e8e8e8\"\n};\n\nfunction ChoosePayedByButton(props) {\n  _s();\n\n  //変更するコンポーネント配列の全体を読み込む\n  const [payments, setPayments] = useRecoilState(paymentState);\n  const [newPayment, setNewPayment] = useRecoilState(defaultPayment); //両方のボタンに値の変更関数を設定\n\n  const handleClickCredit = payment => {\n    if (payment.id !== null) {\n      setPayments([...payments.slice(0, payment.id), { ...payment,\n        payedBy: 'credit'\n      }, ...payments.slice(payment.id + 1)]);\n    } else {\n      setNewPayment({ ...newPayment,\n        payedBy: 'credit'\n      });\n    }\n  };\n\n  const handleClickCash = payment => {\n    if (payment.id !== null) {\n      setPayments([...payments.slice(0, payment.id), { ...payment,\n        payedBy: 'cash'\n      }, ...payments.slice(payment.id + 1)]);\n    } else {\n      setNewPayment({ ...newPayment,\n        payedBy: 'cash'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ButtonGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      sx: props.payment.payedBy === 'credit' ? choosedStyle : notChoosedStyle,\n      onClick: () => handleClickCredit(props.payment),\n      children: /*#__PURE__*/_jsxDEV(CreditCardIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: props.payment.payedBy === 'cash' ? choosedStyle : notChoosedStyle,\n      onClick: () => handleClickCash(props.payment),\n      children: /*#__PURE__*/_jsxDEV(MonetizationOnIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChoosePayedByButton, \"IElHZVCWEIbeyd5LGbxNAnpf+yc=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = ChoosePayedByButton;\nexport default ChoosePayedByButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChoosePayedByButton\");","map":{"version":3,"names":["Button","ButtonGroup","CreditCardIcon","MonetizationOnIcon","useRecoilState","paymentState","defaultPayment","choosedStyle","color","background","notChoosedStyle","ChoosePayedByButton","props","payments","setPayments","newPayment","setNewPayment","handleClickCredit","payment","id","slice","payedBy","handleClickCash"],"sources":["/Users/yudaihamashima/programing/Projects/3_money-management/src/components/atoms/crudUnit/choosePayedByButton.tsx"],"sourcesContent":["//propsとして、コンポーネント配列の１要素（コンポーネント）を受け取る\n\nimport { Button, ButtonGroup } from \"@mui/material\"\n\n//２択ボタンのアイコンをインストール\nimport CreditCardIcon from '@mui/icons-material/CreditCard'\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn'\n\n//変更するコンポーネント配列をインポート\nimport { useRecoilState } from 'recoil'\nimport { paymentState } from '../../../recoil/atoms'\nimport { defaultPayment } from '../../../recoil/atoms'\n\n//ボタンの選択・未選択時のデザイン\nconst choosedStyle = {\n    color: \"#474747\", \n    background: \"#fffa0f\",\n}\nconst notChoosedStyle = {\n    color: \"#d6d6d6\",\n    background: \"#e8e8e8\",\n}\n\nfunction ChoosePayedByButton(props: any) {\n\n    //変更するコンポーネント配列の全体を読み込む\n    const [payments, setPayments] = useRecoilState(paymentState)\n    const [newPayment, setNewPayment] = useRecoilState(defaultPayment)\n\n    //両方のボタンに値の変更関数を設定\n    const handleClickCredit = (payment: any) => {\n        if(payment.id !== null){\n            setPayments([\n                ...payments.slice(0, payment.id),\n                {...payment, payedBy: 'credit'},\n                ...payments.slice(payment.id+1)\n            ])\n        } else {\n            setNewPayment({ ...newPayment, payedBy: 'credit' })\n        }\n        \n    }\n    const handleClickCash = (payment: any) => {\n        if(payment.id !== null){\n            setPayments([\n                ...payments.slice(0, payment.id),\n                {...payment, payedBy: 'cash'},\n                ...payments.slice(payment.id+1)\n            ])\n        } else {\n            setNewPayment({ ...newPayment, payedBy: 'cash' })\n        }\n    }\n\n    return(\n        <ButtonGroup>\n            <Button \n                sx={ props.payment.payedBy === 'credit' ? choosedStyle : notChoosedStyle }\n                onClick={()=>handleClickCredit(props.payment)}\n            >\n                <CreditCardIcon />\n            </Button>\n            <Button\n                sx={ props.payment.payedBy === 'cash' ? choosedStyle : notChoosedStyle }\n                onClick={()=>handleClickCash(props.payment)}\n            >\n                <MonetizationOnIcon />\n            </Button>\n        </ButtonGroup>   \n    )\n}\n\nexport default ChoosePayedByButton"],"mappings":";;;AAAA;AAEA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,eAApC,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,kBAAP,MAA+B,oCAA/B,C,CAEA;;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,cAAT,QAA+B,uBAA/B,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,SADU;EAEjBC,UAAU,EAAE;AAFK,CAArB;AAIA,MAAMC,eAAe,GAAG;EACpBF,KAAK,EAAE,SADa;EAEpBC,UAAU,EAAE;AAFQ,CAAxB;;AAKA,SAASE,mBAAT,CAA6BC,KAA7B,EAAyC;EAAA;;EAErC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,cAAc,CAACC,YAAD,CAA9C;EACA,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BZ,cAAc,CAACE,cAAD,CAAlD,CAJqC,CAMrC;;EACA,MAAMW,iBAAiB,GAAIC,OAAD,IAAkB;IACxC,IAAGA,OAAO,CAACC,EAAR,KAAe,IAAlB,EAAuB;MACnBL,WAAW,CAAC,CACR,GAAGD,QAAQ,CAACO,KAAT,CAAe,CAAf,EAAkBF,OAAO,CAACC,EAA1B,CADK,EAER,EAAC,GAAGD,OAAJ;QAAaG,OAAO,EAAE;MAAtB,CAFQ,EAGR,GAAGR,QAAQ,CAACO,KAAT,CAAeF,OAAO,CAACC,EAAR,GAAW,CAA1B,CAHK,CAAD,CAAX;IAKH,CAND,MAMO;MACHH,aAAa,CAAC,EAAE,GAAGD,UAAL;QAAiBM,OAAO,EAAE;MAA1B,CAAD,CAAb;IACH;EAEJ,CAXD;;EAYA,MAAMC,eAAe,GAAIJ,OAAD,IAAkB;IACtC,IAAGA,OAAO,CAACC,EAAR,KAAe,IAAlB,EAAuB;MACnBL,WAAW,CAAC,CACR,GAAGD,QAAQ,CAACO,KAAT,CAAe,CAAf,EAAkBF,OAAO,CAACC,EAA1B,CADK,EAER,EAAC,GAAGD,OAAJ;QAAaG,OAAO,EAAE;MAAtB,CAFQ,EAGR,GAAGR,QAAQ,CAACO,KAAT,CAAeF,OAAO,CAACC,EAAR,GAAW,CAA1B,CAHK,CAAD,CAAX;IAKH,CAND,MAMO;MACHH,aAAa,CAAC,EAAE,GAAGD,UAAL;QAAiBM,OAAO,EAAE;MAA1B,CAAD,CAAb;IACH;EACJ,CAVD;;EAYA,oBACI,QAAC,WAAD;IAAA,wBACI,QAAC,MAAD;MACI,EAAE,EAAGT,KAAK,CAACM,OAAN,CAAcG,OAAd,KAA0B,QAA1B,GAAqCd,YAArC,GAAoDG,eAD7D;MAEI,OAAO,EAAE,MAAIO,iBAAiB,CAACL,KAAK,CAACM,OAAP,CAFlC;MAAA,uBAII,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IAJJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAOI,QAAC,MAAD;MACI,EAAE,EAAGN,KAAK,CAACM,OAAN,CAAcG,OAAd,KAA0B,MAA1B,GAAmCd,YAAnC,GAAkDG,eAD3D;MAEI,OAAO,EAAE,MAAIY,eAAe,CAACV,KAAK,CAACM,OAAP,CAFhC;MAAA,uBAII,QAAC,kBAAD;QAAA;QAAA;QAAA;MAAA;IAJJ;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH;;GA/CQP,mB;UAG2BP,c,EACIA,c;;;KAJ/BO,mB;AAiDT,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}