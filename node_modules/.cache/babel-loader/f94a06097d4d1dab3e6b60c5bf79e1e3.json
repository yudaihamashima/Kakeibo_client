{"ast":null,"code":"var _jsxFileName = \"/Users/yudaihamashima/programing/Projects/3_money-management/src/components/organisms/paymentCalender.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { paymentState } from '../../recoil/atoms';\nimport { clickedDateState } from '../../recoil/atoms';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentCalender(props) {\n  _s();\n\n  const year = props.year;\n  const month = props.month;\n  const payments = useRecoilValue(paymentState);\n  const [clickedDate, setClickedDate] = useRecoilState(clickedDateState); //when date clicked\n\n  const handleClick = event => {\n    const pickedDate = event.dateStr;\n    setClickedDate(pickedDate);\n  }; //input calender event\n\n\n  const PaymentBars = (year, month) => {\n    const paymentBars = [];\n\n    const monthlyDays = (year, month) => {\n      const dayNum = month => {\n        if ([1, 3, 5, 7, 8, 10, 12].some(monthHas31day => monthHas31day === month)) {\n          return 31;\n        } else {\n          return 30;\n        }\n      };\n\n      const days = [...Array(dayNum(month))].map((_, index) => {\n        if (month < 10) {\n          if (index < 9) {\n            return year + \"-0\" + month + \"-0\" + (index + 1);\n          }\n\n          if (index >= 9) {\n            return year + \"-0\" + month + \"-\" + (index + 1);\n          }\n        }\n\n        if (month >= 10) {\n          if (index < 9) {\n            return year + \"-\" + month + \"-0\" + (index + 1);\n          }\n\n          if (index >= 9) {\n            return year + \"-\" + month + \"-\" + (index + 1);\n          }\n        }\n      });\n      return days;\n    };\n\n    monthlyDays(year, month).map(day => {\n      const paymentsOfDay = payments.filter(payment => payment.date === day);\n      paymentsOfDay.map(paymentOfDay => {\n        if (paymentOfDay !== null && paymentOfDay !== undefined) {\n          paymentBars.push({\n            title: paymentOfDay.cost.toString() + '円',\n            start: paymentOfDay.date\n          });\n        }\n      });\n    });\n    return paymentBars;\n  };\n\n  return /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin],\n    initialView: \"dayGridMonth\",\n    events: PaymentBars(year, month),\n    dateClick: handleClick,\n    headerToolbar: {\n      center: ''\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentCalender, \"yJfgwmZycE50MnxbNqsJkPpoVBs=\", false, function () {\n  return [useRecoilValue, useRecoilState];\n});\n\n_c = PaymentCalender;\nexport default PaymentCalender;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentCalender\");","map":{"version":3,"names":["useRecoilState","useRecoilValue","paymentState","clickedDateState","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","PaymentCalender","props","year","month","payments","clickedDate","setClickedDate","handleClick","event","pickedDate","dateStr","PaymentBars","paymentBars","monthlyDays","dayNum","some","monthHas31day","days","Array","map","_","index","day","paymentsOfDay","filter","payment","date","paymentOfDay","undefined","push","title","cost","toString","start","center"],"sources":["/Users/yudaihamashima/programing/Projects/3_money-management/src/components/organisms/paymentCalender.tsx"],"sourcesContent":["import { useRecoilState ,useRecoilValue } from 'recoil'\nimport { paymentState } from '../../recoil/atoms'\nimport { clickedDateState } from '../../recoil/atoms'\n\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\n\nfunction PaymentCalender(props: any) {\n    const year = props.year\n    const month = props.month\n    const payments = useRecoilValue(paymentState)\n    const [ clickedDate, setClickedDate ] = useRecoilState(clickedDateState)\n\n    //when date clicked\n    const handleClick = (event: any) => {\n        const pickedDate = event.dateStr\n        setClickedDate(pickedDate)\n    }\n\n    //input calender event\n    const PaymentBars = (year: number, month: number) => {\n        interface PaymentBar {\n            title: string\n            start: string\n        }\n        const paymentBars = [] as PaymentBar[] \n        const monthlyDays = (year: number, month: number) => { \n            const dayNum = (month: number) => {\n                if([1,3,5,7,8,10,12].some(monthHas31day => monthHas31day === month)) {\n                    return 31\n                } else {\n                    return 30\n                }\n            }\n            const days = [...Array(dayNum(month))].map((_, index: number) => {\n                if (month < 10) {\n                    if (index < 9) { return year + \"-0\" + month + \"-0\" + (index+1) }\n                    if (index >= 9) { return year + \"-0\" + month + \"-\" + (index+1) }\n                }\n                if (month >= 10) {\n                    if (index < 9) { return year + \"-\" + month + \"-0\" + (index+1) }\n                    if (index >= 9) { return year + \"-\" + month + \"-\" + (index+1) }\n                }\n            })\n            return days\n        }\n        monthlyDays(year, month).map((day) => {\n            const paymentsOfDay = payments.filter(payment => payment.date === day)\n            paymentsOfDay.map((paymentOfDay) => {\n                if(paymentOfDay !== null && paymentOfDay !== undefined) {\n                    paymentBars.push({\n                        title: paymentOfDay.cost.toString()+'円',\n                        start: paymentOfDay.date\n                    })\n                }\n            })\n        })\n        return paymentBars\n    }\n\n    return(\n        <FullCalendar\n            plugins={[interactionPlugin ,dayGridPlugin, timeGridPlugin]}\n            initialView=\"dayGridMonth\"\n            events={PaymentBars(year, month)}\n            dateClick={handleClick}\n            headerToolbar={{\n                center: ''\n            }}\n        />       \n    )\n\n}\n\nexport default PaymentCalender"],"mappings":"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"},"metadata":{},"sourceType":"module"}